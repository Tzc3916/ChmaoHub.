-- Chmao脚本中心UI（全可拖动版）
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer

-- 创建主UI
local Main = Instance.new("ScreenGui")
Main.Name = "ChmaoScriptUI"
Main.ResetOnSpawn = false
Main.Parent = game.CoreGui

-- 主框架（尺寸缩小为500x300）
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 500, 0, 300)
Frame.Position = UDim2.new(0.5, -250, 0.5, -150)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
Frame.BackgroundTransparency = 0.15
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = false  -- 禁用默认拖动，使用自定义拖动
Frame.Visible = false
Frame.Parent = Main

-- 添加圆角
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = Frame

-- 顶部栏（用于拖动主窗口）
local TopBar = Instance.new("Frame")
TopBar.Size = UDim2.new(1, 0, 0, 32)
TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
TopBar.BorderSizePixel = 0
TopBar.Parent = Frame

local TopBarCorner = Instance.new("UICorner")
TopBarCorner.CornerRadius = UDim.new(0, 8)
TopBarCorner.Parent = TopBar

-- 主窗口拖动功能
local frameDragging, frameDragStart, frameStartPos
TopBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        frameDragging = true
        frameDragStart = input.Position
        frameStartPos = Frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                frameDragging = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if frameDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - frameDragStart
        Frame.Position = frameStartPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

-- 标题文字
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0, 200, 1, 0)
Title.Position = UDim2.new(0.5, -100, 0, 0)
Title.Text = "CHMAO SCRIPT"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 18
Title.TextColor3 = Color3.fromRGB(200, 200, 255)
Title.BackgroundTransparency = 1
Title.Parent = TopBar

-- 彩色渐变效果
coroutine.wrap(function()
    while task.wait(0.05) do
        local t = tick() * 1.5
        Title.TextColor3 = Color3.new(
            0.7 + 0.3 * math.sin(t),
            0.7 + 0.3 * math.sin(t + 2),
            0.7 + 0.3 * math.sin(t + 4)
        )
    end
end)()

-- 左侧导航栏
local Sidebar = Instance.new("Frame")
Sidebar.Size = UDim2.new(0, 100, 1, -32)
Sidebar.Position = UDim2.new(0, 0, 0, 32)
Sidebar.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
Sidebar.BackgroundTransparency = 0.2
Sidebar.BorderSizePixel = 0
Sidebar.Parent = Frame

-- 创建页签按钮
local TabBtns = {}
local function createTab(name, order)
    local btn = Instance.new("TextButton")
    btn.Name = "Tab_"..name
    btn.Size = UDim2.new(0.9, 0, 0, 36)
    btn.Position = UDim2.new(0.05, 0, 0, (order-1)*42 + 8)
    btn.BackgroundColor3 = Color3.fromRGB(65, 65, 85)
    btn.TextColor3 = Color3.fromRGB(220, 220, 255)
    btn.Font = Enum.Font.GothamMedium
    btn.Text = name
    btn.TextSize = 14
    btn.AutoButtonColor = false
    btn.Parent = Sidebar
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 6)
    btnCorner.Parent = btn
    
    -- 悬停效果
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(65, 65, 85)
    end)
    
    TabBtns[name..order] = btn
    return btn
end

-- 创建页签
local infoTab = createTab("信息", 1)
local func1Tab = createTab("功能1", 2)
local func2Tab = createTab("功能2", 3)
local func3Tab = createTab("功能3", 4)

-- 主内容区域
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -100, 1, -32)
ContentFrame.Position = UDim2.new(0, 100, 0, 32)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = Frame

-- 信息页
local InfoPage = Instance.new("Frame")
InfoPage.Size = UDim2.new(1, 0, 1, 0)
InfoPage.BackgroundTransparency = 1
InfoPage.Visible = true
InfoPage.Parent = ContentFrame

-- 欢迎信息
local Welcome = Instance.new("TextLabel")
Welcome.Size = UDim2.new(1, -20, 0, 40)
Welcome.Position = UDim2.new(0, 10, 0, 10)
Welcome.Text = "欢迎使用臭猫脚本"
Welcome.TextColor3 = Color3.fromRGB(200, 200, 255)
Welcome.TextSize = 24
Welcome.Font = Enum.Font.GothamBold
Welcome.BackgroundTransparency = 1
Welcome.Parent = InfoPage

-- 实时时间
local TimeLabel = Instance.new("TextLabel")
TimeLabel.Size = UDim2.new(1, -20, 0, 30)
TimeLabel.Position = UDim2.new(0, 10, 0, 50)
TimeLabel.Text = os.date("%Y-%m-%d %H:%M:%S")
TimeLabel.TextColor3 = Color3.fromRGB(180, 180, 220)
TimeLabel.TextSize = 16
TimeLabel.Font = Enum.Font.Gotham
TimeLabel.BackgroundTransparency = 1
TimeLabel.Parent = InfoPage

coroutine.wrap(function()
    while task.wait(1) do
        TimeLabel.Text = os.date("%Y-%m-%d %H:%M:%S")
    end
end)()

-- 联系信息
local ContactLabel = Instance.new("TextLabel")
ContactLabel.Size = UDim2.new(1, -20, 0, 80)
ContactLabel.Position = UDim2.new(0, 10, 0, 90)
ContactLabel.Text = "QQ群: 962873051\n作者: 2563684259\n更新时间: 2025年8月16日"
ContactLabel.TextColor3 = Color3.fromRGB(170, 170, 200)
ContactLabel.TextSize = 14
ContactLabel.Font = Enum.Font.Gotham
ContactLabel.TextYAlignment = Enum.TextYAlignment.Top
ContactLabel.BackgroundTransparency = 1
ContactLabel.Parent = InfoPage

-- 功能页1
local FeaturePage1 = Instance.new("ScrollingFrame")
FeaturePage1.Size = UDim2.new(1, 0, 1, 0)
FeaturePage1.BackgroundTransparency = 1
FeaturePage1.ScrollBarThickness = 6
FeaturePage1.Visible = false
FeaturePage1.Parent = ContentFrame

-- 功能按钮生成器
local function createFeatureButton(text, yPos)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.9, 0, 0, 40)
    btn.Position = UDim2.new(0.05, 0, 0, yPos)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 100)
    btn.TextColor3 = Color3.fromRGB(240, 240, 255)
    btn.Font = Enum.Font.GothamMedium
    btn.Text = text
    btn.TextSize = 16
    btn.AutoButtonColor = false
    btn.Parent = FeaturePage1
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 6)
    btnCorner.Parent = btn
    
    -- 悬停效果
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(90, 90, 130)
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(70, 70, 100)
    end)
    
    return btn
end

-- 创建功能按钮
local speedBtn = createFeatureButton("人物速度加速", 15)
local jumpBtn = createFeatureButton("超级跳跃", 65)
local infJumpBtn = createFeatureButton("无限跳跃", 115)
local noclipBtn = createFeatureButton("穿墙模式", 165)
local flyBtn = createFeatureButton("飞行模式", 215)

-- 功能实现
speedBtn.MouseButton1Click:Connect(function()
    local char = LP.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.WalkSpeed = 50
            speedBtn.Text = "速度加速 (50)"
        end
    end
end)

jumpBtn.MouseButton1Click:Connect(function()
    local char = LP.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.JumpPower = 100
            jumpBtn.Text = "跳跃高度 (100)"
        end
    end
end)

infJumpBtn.MouseButton1Click:Connect(function()
    _G.InfJumpEnabled = not _G.InfJumpEnabled
    infJumpBtn.Text = _G.InfJumpEnabled and "无限跳跃 (开启)" or "无限跳跃"
end)

UIS.JumpRequest:Connect(function()
    if _G.InfJumpEnabled then
        local char = LP.Character
        if char then
            local hum = char:FindFirstChildOfClass("Humanoid")
            if hum then
                hum:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end
end)

noclipBtn.MouseButton1Click:Connect(function()
    _G.NoClipEnabled = not _G.NoClipEnabled
    noclipBtn.Text = _G.NoClipEnabled and "穿墙模式 (开启)" or "穿墙模式"
    
    if _G.NoClipEnabled then
        coroutine.wrap(function()
            while _G.NoClipEnabled and task.wait(0.1) do
                local char = LP.Character
                if char then
                    for _, part in ipairs(char:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end
        end)()
    end
end)

flyBtn.MouseButton1Click:Connect(function()
    _G.FlyEnabled = not _G.FlyEnabled
    flyBtn.Text = _G.FlyEnabled and "飞行模式 (开启)" or "飞行模式"
    
    if _G.FlyEnabled then
        local char = LP.Character
        if char then
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                -- 创建飞行控制器
                local bg = Instance.new("BodyGyro", root)
                bg.MaxTorque = Vector3.new(0, 0, 0)
                
                local bv = Instance.new("BodyVelocity", root)
                bv.Velocity = Vector3.new(0, 0, 0)
                bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                
                -- 飞行控制循环
                coroutine.wrap(function()
                    while _G.FlyEnabled and task.wait() do
                        local cam = workspace.CurrentCamera.CFrame
                        local move = Vector3.new()
                        
                        if UIS:IsKeyDown(Enum.KeyCode.W) then move = move + cam.LookVector end
                        if UIS:IsKeyDown(Enum.KeyCode.S) then move = move - cam.LookVector end
                        if UIS:IsKeyDown(Enum.KeyCode.A) then move = move - cam.RightVector end
                        if UIS:IsKeyDown(Enum.KeyCode.D) then move = move + cam.RightVector end
                        if UIS:IsKeyDown(Enum.KeyCode.Space) then move = move + Vector3.new(0, 1, 0) end
                        if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then move = move + Vector3.new(0, -1, 0) end
                        
                        if move.Magnitude > 0 then
                            bv.Velocity = move.Unit * 50
                        else
                            bv.Velocity = Vector3.new(0, 0, 0)
                        end
                    end
                    
                    -- 清理
                    if bg then bg:Destroy() end
                    if bv then bv:Destroy() end
                end)()
            end
        end
    else
        -- 飞行关闭时重置速度
        local char = LP.Character
        if char then
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                local bv = root:FindFirstChild("BodyVelocity")
                if bv then bv:Destroy() end
            end
        end
    end
end)

-- 页签切换
local pages = {
    [infoTab] = InfoPage,
    [func1Tab] = FeaturePage1,
    [func2Tab] = ContentFrame, -- 占位
    [func3Tab] = ContentFrame  -- 占位
}

for tab, btn in pairs(TabBtns) do
    btn.MouseButton1Click:Connect(function()
        -- 隐藏所有页面
        InfoPage.Visible = false
        FeaturePage1.Visible = false
        
        -- 显示当前页面
        if pages[btn] then
            pages[btn].Visible = true
        end
    end)
end

-- ===== 可拖动的迷你开关按钮 =====
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Name = "ToggleButton"
ToggleBtn.Size = UDim2.new(0, 100, 0, 36)
ToggleBtn.Position = UDim2.new(0, 20, 0, 20)
ToggleBtn.Text = "打开脚本"
ToggleBtn.Font = Enum.Font.GothamBold
ToggleBtn.TextSize = 14
ToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 100, 180)
ToggleBtn.TextColor3 = Color3.new(1, 1, 1)
ToggleBtn.Parent = Main

-- 添加圆角
local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 8)
ToggleCorner.Parent = ToggleBtn

-- 开关按钮拖动功能（流畅跟手）
local btnDragging, btnDragStart, btnStartPos
ToggleBtn.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        btnDragging = true
        btnDragStart = input.Position
        btnStartPos = ToggleBtn.Position
        
        -- 拖动时改变外观
        ToggleBtn.BackgroundTransparency = 0.2
        ToggleBtn.Size = UDim2.new(0, 110, 0, 40)
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                btnDragging = false
                ToggleBtn.BackgroundTransparency = 0
                ToggleBtn.Size = UDim2.new(0, 100, 0, 36)
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if btnDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - btnDragStart
        ToggleBtn.Position = btnStartPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

-- 切换显示/隐藏
ToggleBtn.MouseButton1Click:Connect(function()
    Frame.Visible = not Frame.Visible
    ToggleBtn.Text = Frame.Visible and "关闭脚本" or "打开脚本"
end)

-- 初始显示信息页
InfoPage.Visible = true
FeaturePage1.Visible = false

print("Chmao脚本中心已加载！")
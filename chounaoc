-- Chmao脚本中心UI（最终修复版）
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local LP = game.Players.LocalPlayer

-- 主UI（缩小尺寸到500x280）
local Main = Instance.new("ScreenGui")
Main.Name = "ChmaoScriptUI"
Main.ResetOnSpawn = false
Main.Parent = game.CoreGui

-- 主框架（缩小尺寸并默认隐藏）
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 500, 0, 280) -- 原600x350
Frame.Position = UDim2.new(0.5, -250, 0.5, -140)
Frame.BackgroundColor3 = Color3.fromRGB(255,255,255)
Frame.BackgroundTransparency = 0.3
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Visible = false
Frame.Parent = Main

-- 顶部栏（高度缩小）
local TopBar = Instance.new("Frame")
TopBar.Size = UDim2.new(1, 0, 0, 30) -- 原36
TopBar.BackgroundColor3 = Color3.fromRGB(255,255,255)
TopBar.BackgroundTransparency = 0.55
TopBar.BorderSizePixel = 0
TopBar.Parent = Frame

-- 标题文字（缩小字号）
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0,180,1,0) -- 原200
Title.Position = UDim2.new(1,-185,0,0) -- 原-210
Title.Text = "Chmao脚本"
Title.TextSize = 20 -- 原24
Title.Font = Enum.Font.GothamSemibold
Title.TextTransparency = 0.25
Title.BackgroundTransparency = 1
Title.Parent = TopBar

-- 彩色渐变效果（保持不变）
coroutine.wrap(function()
    while true do
        local t = tick()*1.5
        Title.TextColor3 = Color3.new(
            0.5+0.5*math.sin(t),
            0.5+0.5*math.sin(t+2),
            0.5+0.5*math.sin(t+4))
        wait(0.03)
    end
end)()

-- 左侧导航栏（宽度缩小）
local Sidebar = Instance.new("Frame")
Sidebar.Size = UDim2.new(0, 90, 1, -30) -- 原100
Sidebar.Position = UDim2.new(0, 0, 0, 30)
Sidebar.BackgroundTransparency = 1
Sidebar.BorderSizePixel = 0
Sidebar.Parent = Frame

-- 创建页签按钮（缩小尺寸）
local TabBtns = {}
local function makeTab(name, order)
    local btn = Instance.new("TextButton")
    btn.Name = "Tab_"..name
    btn.Size = UDim2.new(1, -10, 0, 36) -- 原40高度
    btn.Position = UDim2.new(0, 5, 0, (order-1)*42 + 8) -- 更紧凑
    btn.BackgroundColor3 = Color3.fromRGB(255,255,255)
    btn.BackgroundTransparency = 0.45
    btn.TextColor3 = Color3.fromRGB(66,66,66)
    btn.Font = Enum.Font.Gotham
    btn.Text = name
    btn.TextSize = 16 -- 原19
    btn.AutoButtonColor = true
    btn.BorderSizePixel = 0
    btn.Parent = Sidebar
    TabBtns[name..order] = btn
    return btn
end

-- 创建页签
makeTab("信息", 1)
makeTab("功能", 2)
makeTab("功能", 3)
makeTab("功能", 4)

-- 主内容区域
local Pages = Instance.new("Frame")
Pages.Name = "Pages"
Pages.Size = UDim2.new(1, -90, 1, -30) -- 匹配侧边栏
Pages.Position = UDim2.new(0, 90, 0, 30)
Pages.BackgroundTransparency = 1
Pages.Parent = Frame

-- 信息页（修复显示问题）
local InfoPage = Instance.new("Frame")
InfoPage.Name = "InfoPage"
InfoPage.Size = UDim2.new(1, 0, 1, 0)
InfoPage.BackgroundTransparency = 1
InfoPage.Visible = true
InfoPage.Parent = Pages

local Welcome = Instance.new("TextLabel")
Welcome.Size = UDim2.new(1, -20, 0, 30)
Welcome.Position = UDim2.new(0, 10, 0, 15)
Welcome.Text = "欢迎使用臭猫脚本"
Welcome.TextSize = 22 -- 原28
Welcome.Font = Enum.Font.GothamBlack
Welcome.BackgroundTransparency = 1
Welcome.Parent = InfoPage

-- 实时时间（修复显示）
local TimeLabel = Instance.new("TextLabel")
TimeLabel.Size = UDim2.new(1, -20, 0, 24)
TimeLabel.Position = UDim2.new(0, 10, 0, 50)
TimeLabel.Text = os.date("%Y-%m-%d %H:%M:%S")
TimeLabel.TextSize = 16 -- 原20
TimeLabel.Font = Enum.Font.Gotham
TimeLabel.BackgroundTransparency = 1
TimeLabel.Parent = InfoPage

coroutine.wrap(function()
    while true do
        TimeLabel.Text = os.date("%Y-%m-%d %H:%M:%S")
        wait(1)
    end
end)()

-- 其他信息
local QQLabel = Instance.new("TextLabel")
QQLabel.Size = UDim2.new(1, -20, 0, 60)
QQLabel.Position = UDim2.new(0, 10, 0, 80)
QQLabel.Text = "QQ群:962873051\n作者:2563684259\n上次更新时间:8月"
QQLabel.TextSize = 14 -- 原17
QQLabel.Font = Enum.Font.Gotham
QQLabel.TextYAlignment = Enum.TextYAlignment.Top
QQLabel.BackgroundTransparency = 1
QQLabel.Parent = InfoPage

-- 功能页容器（修复显示切换问题）
local OtherPages = {}
for i = 1, 3 do
    local page = Instance.new("ScrollingFrame") -- 改为可滚动
    page.Name = "Page_"..i
    page.Size = UDim2.new(1, 0, 1, 0)
    page.BackgroundTransparency = 1
    page.ScrollBarThickness = 4
    page.Visible = false
    page.Parent = Pages
    OtherPages[i] = page
    
    -- 添加布局
    local UIList = Instance.new("UIListLayout")
    UIList.Padding = UDim.new(0, 10)
    UIList.Parent = page
end

-- 创建功能按钮（修复功能不显示问题）
local function makeBtn(parent, text, order)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.9, 0, 0, 36)
    btn.Position = UDim2.new(0.05, 0, 0, (order-1)*45 + 15)
    btn.BackgroundColor3 = Color3.fromRGB(255,255,255)
    btn.BackgroundTransparency = 0.4
    btn.TextColor3 = Color3.fromRGB(32,32,32)
    btn.Font = Enum.Font.GothamBold
    btn.Text = text
    btn.TextSize = 16
    btn.AutoButtonColor = true
    btn.Parent = parent
    return btn
end

-- 功能1页按钮（确保显示）
local btn1 = makeBtn(OtherPages[1], "人物速度加速", 1)
btn1.MouseButton1Click:Connect(function()
    local hum = LP.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.WalkSpeed = 50 end
    btn1.Text = "速度已加速(50)"
end)

local btn2 = makeBtn(OtherPages[1], "超级跳跃", 2)
btn2.MouseButton1Click:Connect(function()
    local hum = LP.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.JumpPower = 100 end
    btn2.Text = "跳跃已提升(100)"
end)

-- ...其他功能按钮同理...

-- 页签切换（修复切换逻辑）
local tabMap = {
    ["Tab_信息1"] = InfoPage,
    ["Tab_功能2"] = OtherPages[1],
    ["Tab_功能3"] = OtherPages[2],
    ["Tab_功能4"] = OtherPages[3]
}

for name, btn in pairs(TabBtns) do
    btn.MouseButton1Click:Connect(function()
        for _, page in pairs(Pages:GetChildren()) do
            if page:IsA("Frame") or page:IsA("ScrollingFrame") then
                page.Visible = false
            end
        end
        if tabMap[name] then
            tabMap[name].Visible = true
        end
    end)
end

-- ===== 关键修复：可拖动的迷你开关按钮 =====
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Name = "ToggleButton"
ToggleBtn.Size = UDim2.new(0, 80, 0, 30) -- 更小的尺寸
ToggleBtn.Position = UDim2.new(0, 10, 0, 10)
ToggleBtn.Text = "打开脚本"
ToggleBtn.Font = Enum.Font.GothamBold
ToggleBtn.TextSize = 14
ToggleBtn.BackgroundColor3 = Color3.fromRGB(80, 120, 200)
ToggleBtn.TextColor3 = Color3.white
ToggleBtn.Parent = Main

-- 添加圆角
local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 6)
Corner.Parent = ToggleBtn

-- 拖动功能（流畅跟手）
local btnDragging, btnDragStart, btnStartPos
ToggleBtn.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        btnDragging = true
        btnDragStart = input.Position
        btnStartPos = ToggleBtn.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                btnDragging = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if btnDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - btnDragStart
        ToggleBtn.Position = btnStartPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

-- 切换显示/隐藏
ToggleBtn.MouseButton1Click:Connect(function()
    Frame.Visible = not Frame.Visible
    ToggleBtn.Text = Frame.Visible and "关闭脚本" or "打开脚本"
end)

-- 初始显示信息页
InfoPage.Visible = true